#!/usr/bin/env bash
# setup-sway.sh
# Script d'installation/configuration rapide pour un environnement Arch + Sway "desktop-like".
# Usage: ./setup-sway.sh [--no-aur] [--no-restart]
# Run as a normal user with sudo privileges.
set -euo pipefail

# ------------ OPTIONS ------------
NO_AUR=0
NO_RESTART=0
for arg in "$@"; do
  case "$arg" in
    --no-aur) NO_AUR=1 ;;
    --no-restart) NO_RESTART=1 ;;
    *) ;;
  esac
done

# ------------ CHECK INTERNET ------------
echo "Vérification connexion réseau..."
if ! ping -c1 -W2 1.1.1.1 >/dev/null 2>&1; then
  cat <<EOF
Aucune connexion détectée. Active le partage de connexion USB (USB tethering)
ou branche un câble Ethernet, puis relance ce script.
Sortie pour l'instant.
EOF
  exit 1
fi
echo "Connexion OK."

# ------------ PACMAN INSTALL (core) ------------
PKGS=(
  sway waybar wofi alacritty xorg-xwayland
  xdg-desktop-portal xdg-desktop-portal-wlr
  pipewire pipewire-pulse wireplumber pavucontrol
  networkmanager network-manager-applet
  lightdm lightdm-gtk-greeter
  polkit polkit-gnome gnome-keyring
  gvfs gvfs-smb thunar firefox
  grim slurp wl-clipboard
  papirus-icon-theme adwaita-icon-theme
  noto-fonts ttf-dejavu ttf-liberation noto-fonts-emoji
  git base-devel curl unzip openssh
)

echo "Mise à jour du système et installation des paquets via pacman..."
sudo pacman -Syu --needed --noconfirm "${PKGS[@]}"

# ------------ (Optionnel) AUR / yay + thèmes Catppuccin ------------
if [ "$NO_AUR" -eq 0 ]; then
  if ! command -v yay >/dev/null 2>&1; then
    echo "Installation de yay (AUR helper)..."
    tmpdir=$(mktemp -d)
    git clone https://aur.archlinux.org/yay.git "$tmpdir/yay"
    pushd "$tmpdir/yay" >/dev/null
    makepkg -si --noconfirm
    popd >/dev/null
    rm -rf "$tmpdir"
  fi

  echo "Installation (AUR) de quelques thèmes (optionnel)..."
  # change noms si tu préfères une autre flavour (mocha/macchiato/latte/frappe)
  yay -S --noconfirm catppuccin-gtk-theme-mocha catppuccin-cursors-mocha papirus-folders-catppuccin-git || true
fi

# ------------ ENABLE SERVICES ------------
echo "Activation des services système..."
sudo systemctl enable --now NetworkManager
sudo systemctl enable --now lightdm

echo "Activation des services utilisateur (PipeWire)..."
# enable user services (ne nécessite pas sudo)
systemctl --user enable --now pipewire pipewire-pulse wireplumber xdg-desktop-portal xdg-desktop-portal-wlr || true

# ------------ CREATION DES FICHIERS DE CONFIG ------------
echo "Création des dossiers de config..."
mkdir -p "$HOME/.config/sway"
mkdir -p "$HOME/.config/waybar"
mkdir -p "$HOME/.config/alacritty"
mkdir -p "$HOME/.config/wofi"

echo "Écriture de ~/.config/sway/config (backup de l'ancien si existant)..."
if [ -f "$HOME/.config/sway/config" ]; then
  cp "$HOME/.config/sway/config" "$HOME/.config/sway/config.bak.$(date +%s)"
  echo "Sauvegarde de l'ancien config : ~/.config/sway/config.bak.*"
fi

cat > "$HOME/.config/sway/config" <<'EOF'
# Minimal Sway config generated by setup-sway.sh
set $mod Mod4
set $term alacritty

# keys
bindsym $mod+Return exec $term
bindsym $mod+d exec wofi --show=drun
bindsym $mod+Shift+q kill
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

# wallpaper (if exists)
exec swaybg -i /usr/share/backgrounds/archlinux/sway.png

# start waybar (if installed)
exec --no-startup-id waybar

# polkit agent for privilege elevation
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# set keyboard FR and Alt+Shift toggle
input * {
    xkb_layout fr
    xkb_options "grp:alt_shift_toggle"
}

# example assignments
# assign [class="Firefox"] 1

# xdg portal for screenshots/etc
exec --no-startup-id /usr/lib/xdg-desktop-portal-wlr
EOF

chmod 600 "$HOME/.config/sway/config"
chown "$USER:$USER" "$HOME/.config/sway/config"

echo "Écriture de ~/.config/waybar/config et style minimal..."
cat > "$HOME/.config/waybar/config" <<'EOF'
{
  "layer": "top",
  "position": "top",
  "modules-left": ["sway/workspaces"],
  "modules-center": ["custom/launcher"],
  "modules-right": ["network", "pulseaudio", "battery", "clock"]
}
EOF

cat > "$HOME/.config/waybar/style.css" <<'EOF'
/* style minimal pour Waybar (modifiable) */
* { font-family: "Noto Sans", sans-serif; font-size: 12px; }
EOF

# wofi desktop theme placeholder (so it shows icons)
cat > "$HOME/.config/wofi/config" <<'EOF'
[settings]
show-icons=true
EOF

# simple alacritty config skeleton if none
if [ ! -f "$HOME/.config/alacritty/alacritty.yml" ]; then
cat > "$HOME/.config/alacritty/alacritty.yml" <<'EOF'
import:
  - ~/.config/alacritty/themes/catppuccin-mocha.yml

window:
  padding:
    x: 8
    y: 8
EOF
fi

# ------------ LIGHTDM session file for Sway ------------
if [ ! -f /usr/share/xsessions/sway.desktop ]; then
  echo "Création de /usr/share/xsessions/sway.desktop pour LightDM..."
  sudo tee /usr/share/xsessions/sway.desktop >/dev/null <<'EOF'
[Desktop Entry]
Name=Sway
Comment=An i3-compatible Wayland compositor
Exec=sway
Type=Application
Keywords=window;manager;tiling;
EOF
fi

# ------------ OPTIONAL: apply Papirus folders if installed ------------
if command -v papirus-folders >/dev/null 2>&1; then
  echo "Application du style Papirus folders (mocha) si disponible..."
  papirus-folders -C mocha || true
fi

# ------------ RELOAD / RESTART - apply config ------------
echo "Tentative de recharger Sway (si session en cours)..."
if [ "${NO_RESTART}" -eq 0 ]; then
  if pgrep -x sway >/dev/null 2>&1; then
    echo "Sway actif : envoi d'un reload..."
    swaymsg reload || {
      echo "Reload a échoué. On tente un restart de sway..."
      swaymsg restart || echo "Impossible de restart sway depuis ce script."
    }
  else
    echo "Sway non détecté. On redémarrera LightDM pour appliquer la session Sway."
    sudo systemctl restart lightdm || echo "Échec du restart LightDM : relance manuelle recommandée."
  fi
else
  echo "--no-restart : pas de reload/restart effectué."
fi

echo "Terminé. Vérifie ~/.config/sway/config, ~/.config/waybar/*, et relance la session si besoin."
echo "Si tu as des erreurs, colle ici la sortie de : journalctl -b _COMM=sway -n 200 --no-pager"